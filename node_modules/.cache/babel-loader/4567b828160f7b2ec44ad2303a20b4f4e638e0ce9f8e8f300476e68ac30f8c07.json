{"ast":null,"code":"export async function payWithETH(toAddress,amountEth){if(!window.ethereum){alert(\"ü¶ä MetaMask not found. Please install it.\");return;}try{const provider=window.ethereum;const accounts=await provider.request({method:'eth_requestAccounts'});const from=accounts[0];const valueInWei=(parseFloat(amountEth)*1e18).toString(16);// Convert ETH to hex Wei\nconst gas=await provider.request({method:'eth_estimateGas',params:[{from,to:toAddress,value:valueInWei}]});const txHash=await provider.request({method:'eth_sendTransaction',params:[{from,to:toAddress,value:valueInWei,gas}]});alert(\"\\u2705 Transaction sent!\\nHash: \".concat(txHash));return txHash;}catch(err){console.error(\"‚ùå Payment failed:\",err);alert(\"‚ùå Transaction failed. See console.\");return null;}}","map":{"version":3,"names":["payWithETH","toAddress","amountEth","window","ethereum","alert","provider","accounts","request","method","from","valueInWei","parseFloat","toString","gas","params","to","value","txHash","concat","err","console","error"],"sources":["/workspaces/Cryptorythm/src/cryptoPaymentHandler.js"],"sourcesContent":["export async function payWithETH(toAddress, amountEth) {\n  if (!window.ethereum) {\n    alert(\"ü¶ä MetaMask not found. Please install it.\");\n    return;\n  }\n\n  try {\n    const provider = window.ethereum;\n    const accounts = await provider.request({ method: 'eth_requestAccounts' });\n    const from = accounts[0];\n    const valueInWei = (parseFloat(amountEth) * 1e18).toString(16); // Convert ETH to hex Wei\n\n    const gas = await provider.request({\n      method: 'eth_estimateGas',\n      params: [{\n        from,\n        to: toAddress,\n        value: valueInWei,\n      }],\n    });\n\n    const txHash = await provider.request({\n      method: 'eth_sendTransaction',\n      params: [{\n        from,\n        to: toAddress,\n        value: valueInWei,\n        gas,\n      }],\n    });\n\n    alert(`‚úÖ Transaction sent!\\nHash: ${txHash}`);\n    return txHash;\n  } catch (err) {\n    console.error(\"‚ùå Payment failed:\", err);\n    alert(\"‚ùå Transaction failed. See console.\");\n    return null;\n  }\n}\n"],"mappings":"AAAA,MAAO,eAAe,CAAAA,UAAUA,CAACC,SAAS,CAAEC,SAAS,CAAE,CACrD,GAAI,CAACC,MAAM,CAACC,QAAQ,CAAE,CACpBC,KAAK,CAAC,2CAA2C,CAAC,CAClD,OACF,CAEA,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAGH,MAAM,CAACC,QAAQ,CAChC,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAD,QAAQ,CAACE,OAAO,CAAC,CAAEC,MAAM,CAAE,qBAAsB,CAAC,CAAC,CAC1E,KAAM,CAAAC,IAAI,CAAGH,QAAQ,CAAC,CAAC,CAAC,CACxB,KAAM,CAAAI,UAAU,CAAG,CAACC,UAAU,CAACV,SAAS,CAAC,CAAG,IAAI,EAAEW,QAAQ,CAAC,EAAE,CAAC,CAAE;AAEhE,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAR,QAAQ,CAACE,OAAO,CAAC,CACjCC,MAAM,CAAE,iBAAiB,CACzBM,MAAM,CAAE,CAAC,CACPL,IAAI,CACJM,EAAE,CAAEf,SAAS,CACbgB,KAAK,CAAEN,UACT,CAAC,CACH,CAAC,CAAC,CAEF,KAAM,CAAAO,MAAM,CAAG,KAAM,CAAAZ,QAAQ,CAACE,OAAO,CAAC,CACpCC,MAAM,CAAE,qBAAqB,CAC7BM,MAAM,CAAE,CAAC,CACPL,IAAI,CACJM,EAAE,CAAEf,SAAS,CACbgB,KAAK,CAAEN,UAAU,CACjBG,GACF,CAAC,CACH,CAAC,CAAC,CAEFT,KAAK,oCAAAc,MAAA,CAA+BD,MAAM,CAAE,CAAC,CAC7C,MAAO,CAAAA,MAAM,CACf,CAAE,MAAOE,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAEF,GAAG,CAAC,CACvCf,KAAK,CAAC,oCAAoC,CAAC,CAC3C,MAAO,KAAI,CACb,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}