{"ast":null,"code":"const Web3=require('web3');const fs=require('fs');const compiled=require('./NFTVaultRental.abi.json');const provider=new Web3.providers.HttpProvider('https://mainnet.infura.io/v3/YOUR_PROJECT_ID');const web3=new Web3(provider);async function deployContract(){const accounts=await web3.eth.getAccounts();const contract=new web3.eth.Contract(compiled);const result=await contract.deploy({data:'YOUR_COMPILED_BYTECODE'}).send({from:accounts[0],gas:'3000000'});console.log(\"✅ Contract deployed to:\",result.options.address);}deployContract();","map":{"version":3,"names":["Web3","require","fs","compiled","provider","providers","HttpProvider","web3","deployContract","accounts","eth","getAccounts","contract","Contract","result","deploy","data","send","from","gas","console","log","options","address"],"sources":["/workspaces/Cryptorythm/src/deployContractTemplate.js"],"sourcesContent":["\nconst Web3 = require('web3');\nconst fs = require('fs');\nconst compiled = require('./NFTVaultRental.abi.json');\n\nconst provider = new Web3.providers.HttpProvider('https://mainnet.infura.io/v3/YOUR_PROJECT_ID');\nconst web3 = new Web3(provider);\n\nasync function deployContract() {\n  const accounts = await web3.eth.getAccounts();\n  const contract = new web3.eth.Contract(compiled);\n  const result = await contract.deploy({\n    data: 'YOUR_COMPILED_BYTECODE'\n  }).send({ from: accounts[0], gas: '3000000' });\n\n  console.log(\"✅ Contract deployed to:\", result.options.address);\n}\n\ndeployContract();\n"],"mappings":"AACA,KAAM,CAAAA,IAAI,CAAGC,OAAO,CAAC,MAAM,CAAC,CAC5B,KAAM,CAAAC,EAAE,CAAGD,OAAO,CAAC,IAAI,CAAC,CACxB,KAAM,CAAAE,QAAQ,CAAGF,OAAO,CAAC,2BAA2B,CAAC,CAErD,KAAM,CAAAG,QAAQ,CAAG,GAAI,CAAAJ,IAAI,CAACK,SAAS,CAACC,YAAY,CAAC,8CAA8C,CAAC,CAChG,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAP,IAAI,CAACI,QAAQ,CAAC,CAE/B,cAAe,CAAAI,cAAcA,CAAA,CAAG,CAC9B,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAF,IAAI,CAACG,GAAG,CAACC,WAAW,CAAC,CAAC,CAC7C,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAL,IAAI,CAACG,GAAG,CAACG,QAAQ,CAACV,QAAQ,CAAC,CAChD,KAAM,CAAAW,MAAM,CAAG,KAAM,CAAAF,QAAQ,CAACG,MAAM,CAAC,CACnCC,IAAI,CAAE,wBACR,CAAC,CAAC,CAACC,IAAI,CAAC,CAAEC,IAAI,CAAET,QAAQ,CAAC,CAAC,CAAC,CAAEU,GAAG,CAAE,SAAU,CAAC,CAAC,CAE9CC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAEP,MAAM,CAACQ,OAAO,CAACC,OAAO,CAAC,CAChE,CAEAf,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}