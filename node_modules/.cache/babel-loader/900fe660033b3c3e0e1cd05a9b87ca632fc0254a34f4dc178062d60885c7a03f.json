{"ast":null,"code":"// useSmartContract.js\n// 🔐 Utility to interact with a deployed smart contract (e.g., NFT vault) using Web3.js\nimport Web3 from'web3';// ⛓️ Web3 library for blockchain interaction\nimport contractABI from'./NFTVaultRental.abi.json';// 📜 Import the ABI (smart contract interface)\n// 🏦 Replace this with your deployed smart contract address\nconst CONTRACT_ADDRESS=\"0x123...abc\";// 📦 Function to fetch vault status from the smart contract\nexport async function getVaultStatus(){const web3=new Web3(window.ethereum);// 🔗 Connect to injected provider (e.g., MetaMask)\nconst contract=new web3.eth.Contract(contractABI,CONTRACT_ADDRESS);// 📘 Create contract instance\nreturn await contract.methods.getVaultStatus().call();// 🧠 Call read-only method from contract\n}","map":{"version":3,"names":["Web3","contractABI","CONTRACT_ADDRESS","getVaultStatus","web3","window","ethereum","contract","eth","Contract","methods","call"],"sources":["/workspaces/Cryptorythm/src/useSmartContract.js"],"sourcesContent":["// useSmartContract.js\n// 🔐 Utility to interact with a deployed smart contract (e.g., NFT vault) using Web3.js\n\nimport Web3 from 'web3'; // ⛓️ Web3 library for blockchain interaction\nimport contractABI from './NFTVaultRental.abi.json'; // 📜 Import the ABI (smart contract interface)\n\n// 🏦 Replace this with your deployed smart contract address\nconst CONTRACT_ADDRESS = \"0x123...abc\";\n\n// 📦 Function to fetch vault status from the smart contract\nexport async function getVaultStatus() {\n  const web3 = new Web3(window.ethereum); // 🔗 Connect to injected provider (e.g., MetaMask)\n  \n  const contract = new web3.eth.Contract(contractABI, CONTRACT_ADDRESS); // 📘 Create contract instance\n  \n  return await contract.methods.getVaultStatus().call(); // 🧠 Call read-only method from contract\n}\n"],"mappings":"AAAA;AACA;AAEA,MAAO,CAAAA,IAAI,KAAM,MAAM,CAAE;AACzB,MAAO,CAAAC,WAAW,KAAM,2BAA2B,CAAE;AAErD;AACA,KAAM,CAAAC,gBAAgB,CAAG,aAAa,CAEtC;AACA,MAAO,eAAe,CAAAC,cAAcA,CAAA,CAAG,CACrC,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAJ,IAAI,CAACK,MAAM,CAACC,QAAQ,CAAC,CAAE;AAExC,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAH,IAAI,CAACI,GAAG,CAACC,QAAQ,CAACR,WAAW,CAAEC,gBAAgB,CAAC,CAAE;AAEvE,MAAO,MAAM,CAAAK,QAAQ,CAACG,OAAO,CAACP,cAAc,CAAC,CAAC,CAACQ,IAAI,CAAC,CAAC,CAAE;AACzD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}